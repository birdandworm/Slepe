<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>OSRS Tile Race Board</title>
  <style>
    body {
      background: #232323;
      color: #ddd;
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    .board {
      display: flex;
      flex-direction: row;
      align-items: flex-end;
      margin-bottom: 40px;
      flex-wrap: wrap;
      gap: 4px;
    }
    .tile {
      position: relative;
      width: 70px;
      height: 110px;
      background: gold;
      border-radius: 8px;
      border: 2px solid #444;
      margin: 2px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-end;
      transition: transform 0.2s;
      box-shadow: 1px 2px 6px #0008;
    }
    .tile.skip-ahead { background: #44e044; }
    .tile.fall-back { background: #e05050; }
    .tile .index {
      font-size: 1.1em;
      font-weight: bold;
      margin-bottom: 2px;
      color: #222;
      background: #ffe;
      border-radius: 4px;
      padding: 2px 8px;
      position: absolute;
      top: 4px;
      left: 4px;
    }
    .tile .item {
      font-size: 0.92em;
      margin-bottom: 10px;
      text-align: center;
      color: #fff;
      padding: 2px 4px;
      word-break: break-word;
    }
    .arrow {
      position: absolute;
      left: 100%;
      top: 50%;
      width: 40px;
      height: 0;
      border-top: 2px solid #0f0;
      z-index: 2;
      pointer-events: none;
    }
    .arrow.fall-back {
      border-top: 2px solid #f00;
      left: -40px;
      right: 100%;
      transform: scaleX(-1);
    }
    .arrow-head {
      position: absolute;
      width: 0; height: 0;
      border-top: 8px solid transparent;
      border-bottom: 8px solid transparent;
      border-left: 12px solid #0f0;
      left: 38px;
      top: -9px;
    }
    .arrow.fall-back .arrow-head {
      border-left: 12px solid #f00;
      left: -12px;
      transform: scaleX(-1);
    }
    .controls {
      margin: 20px 0;
      display: flex;
      align-items: center;
      gap: 18px;
    }
    .die-result {
      font-size: 1.4em;
      font-weight: bold;
      color: #f8f8a0;
      min-width: 50px;
      display: inline-block;
    }
  </style>
</head>
<body>
  <h1>OSRS Tile Race Board</h1>
  <div class="controls">
    <button id="roll-btn">Roll 3-sided Die</button>
    <span class="die-result" id="die-result"></span>
  </div>
  <div id="board" class="board"></div>
  <script>
    // --- Board generation logic ---
    const OSRS_ITEMS = [
      "Bronze sword", "Iron pickaxe", "Cowhide", "Rune scimitar", "Dragon scimitar",
      "Partyhat", "Abyssal whip", "Saradomin brew", "Zulrah's scales", "Barrows gloves",
      "Rune platebody", "Mithril platebody", "Dragon pickaxe", "Bandos tassets",
      "Armadyl godsword", "Sanfew serum", "Ring of wealth", "Fire cape", "Dragon bones", "Magic logs"
    ];

    function randomInt(a, b) { return a + Math.floor(Math.random() * (b - a + 1)); }

    function shuffle(arr) {
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i+1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    function generateBoard(numTiles = 20, numSkipAhead = 3, numFallBack = 3) {
      // Pick items
      let items = [];
      for (let i = 0; i < numTiles; ++i)
        items.push(OSRS_ITEMS[randomInt(0, OSRS_ITEMS.length-1)]);
      // Pick indices for effects
      let available = [];
      for (let i = 1; i < numTiles-1; ++i) available.push(i);
      shuffle(available);
      let skipAheadIndices = available.slice(0, numSkipAhead);
      let fallBackIndices = available.slice(numSkipAhead, numSkipAhead + numFallBack);

      // Build tiles
      let tiles = [];
      for (let i = 0; i < numTiles; ++i)
        tiles.push({ index: i, item: items[i], effect: null, target: null });

      // Assign skip-ahead
      for (let idx of skipAheadIndices) {
        let jump = randomInt(3, 7);
        let target = Math.min(idx + jump, numTiles-1);
        if (target !== idx)
          tiles[idx].effect = { type: "skip-ahead", target: target };
      }
      // Assign fall-back
      for (let idx of fallBackIndices) {
        let drop = randomInt(3, 7);
        let target = Math.max(idx - drop, 0);
        if (target !== idx)
          tiles[idx].effect = { type: "fall-back", target: target };
      }
      return tiles;
    }

    // --- Visualization ---
    function renderBoard(tiles) {
      const container = document.getElementById('board');
      container.innerHTML = '';

      tiles.forEach((tile, i) => {
        const div = document.createElement('div');
        div.className = 'tile';
        if (tile.effect) {
          if (tile.effect.type === 'skip-ahead') div.classList.add('skip-ahead');
          if (tile.effect.type === 'fall-back') div.classList.add('fall-back');
        }
        const idxSpan = document.createElement('span');
        idxSpan.className = 'index';
        idxSpan.textContent = tile.index;
        div.appendChild(idxSpan);
        const itemSpan = document.createElement('span');
        itemSpan.className = 'item';
        itemSpan.textContent = tile.item;
        div.appendChild(itemSpan);

        // Add arrows if needed
        if (tile.effect) {
          const arrow = document.createElement('div');
          arrow.className = 'arrow'+(tile.effect.type === "fall-back" ? " fall-back" : "");
          arrow.style.width = (Math.abs(tile.index - tile.effect.target) * 70 - 10) + "px";
          const arrowHead = document.createElement('div');
          arrowHead.className = 'arrow-head';
          arrow.appendChild(arrowHead);
          div.appendChild(arrow);
        }
        container.appendChild(div);
      });
    }

    // --- Die rolling logic ---
    function rollDie3() {
      return randomInt(1, 3);
    }

    document.getElementById('roll-btn').addEventListener('click', () => {
      const result = rollDie3();
      document.getElementById('die-result').textContent = `You rolled: ${result}`;
    });

    // --- Run ---
    const tiles = generateBoard(20, 3, 3);
    renderBoard(tiles);
  </script>
</body>
</html>
